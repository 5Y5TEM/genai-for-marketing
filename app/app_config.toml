# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -----------------------------------------------------------------------------
# Global Configurations
# -----------------------------------------------------------------------------
[global]

# Replace with your project ID and location
project_id = "rl-llm-dev"
location = "us-central1"

# Provide the path to your JSON credential
# This credential will be used to interact with Workspace
# This is the path inside the docker image, example: /app/credential.json
service_account_json_key = '/credentials/rl-llm-dev.json'  # Change this path if you copied the file to a different path 


# -----------------------------------------------------------------------------
# Translation options
# -----------------------------------------------------------------------------
[translate_api]

# Include or remove languages as needed. Use the this documentation as
# reference: https://cloud.google.com/translate/docs/languages
Spanish = "es"
Chinese = "zh"
German = "de"
Japanese = "ja"
Portuguese = "pt"


# -----------------------------------------------------------------------------
# Model names for Vertex AI
# -----------------------------------------------------------------------------
[models]

# If needed, replace with a specific version of the model. Check the Vertex AI 
# documentation for more information.
text.text_model_name = "text-bison"
image.image_model_name = "imagegeneration"
code.code_model_name = "code-bison"


# -----------------------------------------------------------------------------
# Configurations for page: Home.py
# -----------------------------------------------------------------------------
[pages.home]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - file_name_*: Images for this page.
page_title = "Gen AI for Marketing"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
file_name_1 = "/app/images/intro_home_1.png"
file_name_2 = "/app/images/intro_home_2.png"


# -----------------------------------------------------------------------------
# Configurations for page: 0_Campaigns.py
# -----------------------------------------------------------------------------
[pages.campaigns]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Campaigns"
page_icon = "/app/images/favicon.png"
page_title_icon = "/app/images/logo.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
campaigns_key = "Campaigns"

# Overview of the Cymbal brand. This description is used along with the prompts
# to generate better results.
# Change this description if you want to describe a different brand.
prompt_brand_overview = """Cymbal brand information:
1. Brand Name:Cymbal
2. Vision: Elevate every step and statement with our curated ensemble of footwear and handbags.
3. Mission: To seamlessly blend comfort and style, Cymbal aims to provide a harmonious collection of shoes and handbags, resonating with modern elegance and timeless charm.
4. Products: 
Shoes: From the bustling city streets to quiet evening outings, our shoes are tailored to fit every scenario with unmatched style and comfort.
Handbags: Crafted for the modern individual, our range spans from spacious totes for daily grind to chic clutches for those nights to remember.
5. Unique Selling Proposition (USP): A symphony of style. At Cymbal, we believe in orchestrating the perfect balance between trendsetting designs and unparalleled quality.
6. Target Audience: Style-savvy individuals aged 20-50 who have an ear for quality and an eye for timeless elegance, seeking the perfect accessories to accompany their ever-evolving lifestyles.
7. Brand Personality: Harmonious, chic, and captivating. Cymbal echoes the rhythm of contemporary fashion with a hint of classic allure.
8. Core Values: Quality First: Every product at Cymbal resonates with a promise of durability and excellence.
Listening to the Beat: We constantly tune into our customer's needs and desires, shaping our collections to mirror the world's evolving fashion pulse.
Echoing Sustainability: Cymbal strikes a chord with the environment, ensuring eco-friendly practices and sustainable choices are at the forefront.
9. Brand Tagline: "Echo Your Elegance."
10. Competitive Landscape: The fashion industry reverberates with many brands, but Cymbal stands distinct with its commitment to harmonizing quality, trend, and sustainability.
11. Future Outlook: Cymbal aspires to expand its resonance in the global market, infusing more sustainable materials into its products, and initiating special editions through designer partnerships, creating exclusive, melodious collections.
Cymbal is not just a brand; it's an experience. Recognizing the rhythm of life and the melodies of fashion, we ensure every piece adds a note of sophistication to our customer's ensemble. Every choice at Cymbal is a step toward a more stylish tomorrow.
"""

# Prompt template for the "Brand Statement"
# Change the prompt if needed.
prompt_brand_statement_template = """Using the Cymbal brand information below as your context, create a brand statement for a campaign targeting {} at age range {} with {} as objective.
{}

Brand statement: """

# Prompt template for the "Primary message"
# Change the prompt if needed.
prompt_primary_msg_template = """You are working to create a creative brief for Cymbal brand, a document that outlines the creative approach and deliverables for a new project, such as a marketing or advertising campaign. 
It's a short document that summarizes the project's mission, goals, challenges, demographics, messaging, and other key details. 
Generate a creative brief for Cymbal's brand for a campaign targeting {} at age range {} with {} as objective and {} as main competitor.
The creative brief must include the primary message, mission, goals, challenges, demographics and any other relevant details for a clear and concise creative brief. Use the context below to extract any information that you need. 
{}

Creative brief: """

# Prompt template for "Communication Channel"
# Change the prompt if needed.
prompt_comms_channel_template = """I want you to act as a marketing specialist who knows how to create awesome marketing assets. Suggest the best marketing channels for an ads campaign for a new women clothing line."""

# Brand name
# Change to your brand name if needed.
prompt_business_name = "Cymbal"

# Parameters for the Creative Brief generation. These parameters will be displayed
# as options for the users.
# Change these parameters if needed.
prompt_genders =[
    'Women',
    'Men'
]
prompt_age_groups =[
    '20-30',
    '30-40',
    '40-50'
]
prompt_objectives = [
    'Drive Awareness',
    'Increasing Traffic',
    'Increasing Engagement',
    'Increasing Sales'
]
prompt_competitors = [
    'Fashion Forward',
    'Style Setter',
    'Wardrobe Wonder'
]


# -----------------------------------------------------------------------------
# Configurations for page: 1_ANALYTICS_&_INSIGHTS.py
# -----------------------------------------------------------------------------

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - file_name: Images for this page.
[pages.1_analytics_insights]
page_title = "Analytics and Insights"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
file_name = "/app/images/page_1.png"


# -----------------------------------------------------------------------------
# Configurations for page: 2_Marketing_Insights.py
# -----------------------------------------------------------------------------

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
[pages.2_marketing_insights]
page_title = "Marketing Insights"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/marketing_analytics_icon.png"

# Looker Dashboards
# The link of the looker Dashboard must follow this format:
# https://<LOOKER INSTANCE URL>/embed/dashboards/<DASHBOARD NUMBER>?allow_login_screen=true
# Include your Dashboards following this patter:
# dashboards.<Name of your dashboard, no spaces> = '<link to your dashboard>'
dashboards.Overview = 'https://googledemo.looker.com/embed/dashboards/2131?allow_login_screen=true'


# -----------------------------------------------------------------------------
# Configurations for page: 3_Audiences.py
# -----------------------------------------------------------------------------
[pages.3_audiences]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Audiences"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/audience_icon.png"

# Dataset ID of the BigQuery dataset. If you change the dataset_id during the deployment 
# of this solution, change it here as well.
dataset_id = "cdp_dataset"

# Tag name for the Dataplex Tag manager.
tag_name = "llmcdptemplate"

# Prompt used to generate SQL from questions using natural language.
# You can change this prompt if needed. 
prompt_nl_sql = """This is a task converting text into GoogleSQL statement. We will first given the dataset schema and then ask a question in text. You are asked to generate SQL statement.
Here is an example: Convert text to SQL:
[SCHEMA details for table `{}.cdp_dataset.customers`]
Full table name: `{}.cdp_dataset.customers` - Column: cart_total - Data Type: FLOAT64 - Primary Key: False - foreign Key: False - Description: The value of the items in the customer's shopping cart.
Full table name: `{}.cdp_dataset.customers` - Column: channel - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The channel through which the customer was acquired.
Full table name: `{}.cdp_dataset.customers` - Column: city - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The city where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: customer_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.customers` - Column: email - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The customer's email address.
Full table name: `{}.cdp_dataset.customers` - Column: is_media_follower - Data Type: BOOL - Primary Key: False - foreign Key: False - Description: Whether the customer is a social media follower.
Full table name: `{}.cdp_dataset.customers` - Column: last_activity_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the customer's last account activity.
Full table name: `{}.cdp_dataset.customers` - Column: last_purchase_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer made their last purchase.
Full table name: `{}.cdp_dataset.customers` - Column: last_sign_up_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer signed up.
Full table name: `{}.cdp_dataset.customers` - Column: loyalty_score - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: A score that measures the customer's engagement with the company.
Full table name: `{}.cdp_dataset.customers` - Column: state - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The state where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: total_emails - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of emails opened by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_purchases - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of purchases made by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of all purchases made by the customer.
[SCHEMA details for table `{}.cdp_dataset.transactions`]
Full table name: `{}.cdp_dataset.transactions` - Column: app_purchase_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The value of the in-app purchase.
Full table name: `{}.cdp_dataset.transactions` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.transactions` - Column: product_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: The code of the inventory item that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: product_name - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The name of the product that was purchased.
Fulll table name: `{}.cdp_dataset.transactions` - Column: transaction_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the transaction was made.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The quantity of items purchased in the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of transaction (e.g., purchase, refund, etc.).
[SCHEMA details for table `{}.cdp_dataset.events`]:
Full table name: `{}.cdp_dataset.events` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.events` - Column: event_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the event.
Full table name: `{}.cdp_dataset.events` - Column: event_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the event.
Full table name: `{}.cdp_dataset.events` - Column: event_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of event.
[Q]: What is the city and state with the most customer transactions?
[SQL]: SELECT c.city, c.state, SUM(t.transaction_qnt) as total_transactions
FROM `{}.cdp_dataset.customers` AS c
JOIN `{}.cdp_dataset.transactions` as t
ON c.customer_id = t.customer_id
GROUP BY c.city, c.state
ORDER BY total_transactions DESC

Here is an example: Convert text to SQL:
[SCHEMA details for table `{}.cdp_dataset.customers`]
Full table name: `{}.cdp_dataset.customers` - Column: cart_total - Data Type: FLOAT64 - Primary Key: False - foreign Key: False - Description: The value of the items in the customer's shopping cart.
Full table name: `{}.cdp_dataset.customers` - Column: channel - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The channel through which the customer was acquired.
Full table name: `{}.cdp_dataset.customers` - Column: city - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The city where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: customer_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.customers` - Column: email - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The customer's email address.
Full table name: `{}.cdp_dataset.customers` - Column: is_media_follower - Data Type: BOOL - Primary Key: False - foreign Key: False - Description: Whether the customer is a social media follower.
Full table name: `{}.cdp_dataset.customers` - Column: last_activity_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the customer's last account activity.
Full table name: `{}.cdp_dataset.customers` - Column: last_purchase_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer made their last purchase.
Full table name: `{}.cdp_dataset.customers` - Column: last_sign_up_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer signed up.
Full table name: `{}.cdp_dataset.customers` - Column: loyalty_score - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: A score that measures the customer's engagement with the company.
Full table name: `{}.cdp_dataset.customers` - Column: state - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The state where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: total_emails - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of emails opened by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_purchases - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of purchases made by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of all purchases made by the customer.
[SCHEMA details for table `{}.cdp_dataset.transactions`]
Full table name: `{}.cdp_dataset.transactions` - Column: app_purchase_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The value of the in-app purchase.
Full table name: `{}.cdp_dataset.transactions` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.transactions` - Column: product_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: The code of the inventory item that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: product_name - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The name of the product that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the transaction was made.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The quantity of items purchased in the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of transaction (e.g., purchase, refund, etc.).
[SCHEMA details for table `{}.cdp_dataset.events`]:
Full table name: `{}.cdp_dataset.events` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.events` - Column: event_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the event.
Full table name: `{}.cdp_dataset.events` - Column: event_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the event.
Full table name: `{}.cdp_dataset.events` - Column: event_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of event.
[Q]: What are the customer emails ordered by the quantity of purchases by the customer in the city of Atlanta and the state of Georgia?
[SQL]: SELECT c.email, c.total_purchases 
FROM `{}.cdp_dataset.customers` as c
WHERE c.city = "Atlanta" AND c.state = "Georgia"
ORDER BY c.total_purchases DESC

Here is an example: Convert text to SQL:
[SCHEMA details for table `{}.cdp_dataset.customers`]
Full table name: `{}.cdp_dataset.customers` - Column: cart_total - Data Type: FLOAT64 - Primary Key: False - foreign Key: False - Description: The value of the items in the customer's shopping cart.
Full table name: `{}.cdp_dataset.customers` - Column: channel - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The channel through which the customer was acquired.
Full table name: `{}.cdp_dataset.customers` - Column: city - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The city where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: customer_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.customers` - Column: email - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The customer's email address.
Full table name: `{}.cdp_dataset.customers` - Column: is_media_follower - Data Type: BOOL - Primary Key: False - foreign Key: False - Description: Whether the customer is a social media follower.
Full table name: `{}.cdp_dataset.customers` - Column: last_activity_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the customer's last account activity.
Full table name: `{}.cdp_dataset.customers` - Column: last_purchase_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer made their last purchase.
Full table name: `{}.cdp_dataset.customers` - Column: last_sign_up_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer signed up.
Full table name: `{}.cdp_dataset.customers` - Column: loyalty_score - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: A score that measures the customer's engagement with the company.
Full table name: `{}.cdp_dataset.customers` - Column: state - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The state where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: total_emails - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of emails opened by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_purchases - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of purchases made by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of all purchases made by the customer.
[SCHEMA details for table `{}.cdp_dataset.transactions`]
Full table name: `{}.cdp_dataset.transactions` - Column: app_purchase_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The value of the in-app purchase.
Full table name: `{}.cdp_dataset.transactions` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.transactions` - Column: product_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: The code of the inventory item that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: product_name - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The name of the product that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the transaction was made.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The quantity of items purchased in the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of transaction (e.g., purchase, refund, etc.).
[SCHEMA details for table `{}.cdp_dataset.events`]:
Full table name: `{}.cdp_dataset.events` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.events` - Column: event_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the event.
Full table name: `{}.cdp_dataset.events` - Column: event_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the event.
Full table name: `{}.cdp_dataset.events` - Column: event_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of event.
[Q]: What are the customer emails ordered by the total transactions in app by the customer in the city of Atlanta and the state of Georgia?
[SQL]: SELECT c.email, SUM(t.app_purchase_qnt) as total_app_purchase
FROM `{}.cdp_dataset.customers` as c
JOIN `{}.cdp_dataset.transactions` as t
ON c.customer_id = t.customer_id
WHERE c.city = "Atlanta" AND c.state = "Georgia"
GROUP BY c.email, c.city, c.state
ORDER BY total_app_purchase DESC

Here is an example: Convert text to SQL:
[SCHEMA details for table `{}.cdp_dataset.customers`]
Full table name: `{}.cdp_dataset.customers` - Column: cart_total - Data Type: FLOAT64 - Primary Key: False - foreign Key: False - Description: The value of the items in the customer's shopping cart.
Full table name: `{}.cdp_dataset.customers` - Column: channel - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The channel through which the customer was acquired.
Full table name: `{}.cdp_dataset.customers` - Column: city - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The city where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: customer_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.customers` - Column: email - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The customer's email address.
Full table name: `{}.cdp_dataset.customers` - Column: is_media_follower - Data Type: BOOL - Primary Key: False - foreign Key: False - Description: Whether the customer is a social media follower.
Full table name: `{}.cdp_dataset.customers` - Column: last_activity_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the customer's last account activity.
Full table name: `{}.cdp_dataset.customers` - Column: last_purchase_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer made their last purchase.
Full table name: `{}.cdp_dataset.customers` - Column: last_sign_up_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the customer signed up.
Full table name: `{}.cdp_dataset.customers` - Column: loyalty_score - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: A score that measures the customer's engagement with the company.
Full table name: `{}.cdp_dataset.customers` - Column: state - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The state where the customer lives.
Full table name: `{}.cdp_dataset.customers` - Column: total_emails - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of emails opened by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_purchases - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total number of purchases made by the customer.
Full table name: `{}.cdp_dataset.customers` - Column: total_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of all purchases made by the customer.
[SCHEMA details for table `{}.cdp_dataset.transactions`]
Full table name: `{}.cdp_dataset.transactions` - Column: app_purchase_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The value of the in-app purchase.
Full table name: `{}.cdp_dataset.transactions` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.transactions` - Column: product_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: The code of the inventory item that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: product_name - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The name of the product that was purchased.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date the transaction was made.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transaction_value - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The total value of the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_qnt - Data Type: INT64 - Primary Key: False - foreign Key: False - Description: The quantity of items purchased in the transaction.
Full table name: `{}.cdp_dataset.transactions` - Column: transation_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of transaction (e.g., purchase, refund, etc.).
[SCHEMA details for table `{}.cdp_dataset.events`]:
Full table name: `{}.cdp_dataset.events` - Column: customer_id - Data Type: INT64 - Primary Key: False - foreign Key: True - Description: A unique identifier of the customer.
Full table name: `{}.cdp_dataset.events` - Column: event_date - Data Type: DATE - Primary Key: False - foreign Key: False - Description: The date of the event.
Full table name: `{}.cdp_dataset.events` - Column: event_id - Data Type: INT64 - Primary Key: True - foreign Key: False - Description: A unique identifier for the event.
Full table name: `{}.cdp_dataset.events` - Column: event_type - Data Type: STRING - Primary Key: False - foreign Key: False - Description: The type of event.
[Q]: Retrieve top 10 customer emails ordered by loyalty score
[SQL]: SELECT c.email
FROM `{}.cdp_dataset.customers` as c
ORDER BY c.loyalty_score DESC 

Here is an example: Convert text to SQL:"""

# The following are default questions and fallback queries
# Change the following variable if needed.
prompt_example_0 = "What are the customer emails ordered by the sum of transactions value by customers in New York City?"
audience_query_0 = """SELECT c.email, SUM(t.transaction_value) as total_transaction_value
FROM `{}.cdp_dataset.customers` as c
JOIN `{}.cdp_dataset.transactions` as t
ON c.customer_id = t.customer_id
WHERE c.city = "New York City"
GROUP BY c.email, c.city
ORDER BY total_transaction_value DESC"""
example_result_0.email.0 = "user36410@sample_user36410.sample"
example_result_0.email.1 = "user39537@sample_user39537.sample"
example_result_0.email.2 = "user42905@sample_user42905.sample"
example_result_0.email.3 = "user16185@sample_user16185.sample"
example_result_0.email.4 = "user27153@sample_user27153.sample"
example_result_0.email.5 = "user38115@sample_user38115.sample"
example_result_0.email.6 = "user10294@sample_user10294.sample"
example_result_0.email.7 = "user14325@sample_user14325.sample"
example_result_0.email.8 = "user11798@sample_user11798.sample"
example_result_0.email.9 = "user3917@sample_user3917.sample"
example_result_0.email.10 = "user7486@sample_user7486.sample"
example_result_0.email.11 = "user654@sample_user654.sample"
example_result_0.email.12 = "user8239@sample_user8239.sample"
example_result_0.email.13 = "user27383@sample_user27383.sample"
example_result_0.email.14 = "user16127@sample_user16127.sample"
example_result_0.email.15 = "user6385@sample_user6385.sample"
example_result_0.email.16 = "user14330@sample_user14330.sample"
example_result_0.email.17 = "user17562@sample_user17562.sample"
example_result_0.email.18 = "user40714@sample_user40714.sample"
example_result_0.email.19 = "user25908@sample_user25908.sample"
example_result_0.email.20 = "user22574@sample_user22574.sample"
example_result_0.email.21 = "user44252@sample_user44252.sample"
example_result_0.email.22 = "user34710@sample_user34710.sample"
example_result_0.email.23 = "user40677@sample_user40677.sample"
example_result_0.email.24 = "user4400@sample_user4400.sample"
example_result_0.email.25 = "user17852@sample_user17852.sample"
example_result_0.email.26 = "user40544@sample_user40544.sample"
example_result_0.email.27 = "user48183@sample_user48183.sample"
example_result_0.email.28 = "user6405@sample_user6405.sample"
example_result_0.email.29 = "user17702@sample_user17702.sample"
example_result_0.email.30 = "user9840@sample_user9840.sample"
example_result_0.email.31 = "user31034@sample_user31034.sample"
example_result_0.email.32 = "user19437@sample_user19437.sample"
example_result_0.email.33 = "user21268@sample_user21268.sample"
example_result_0.email.34 = "user27294@sample_user27294.sample"
example_result_0.email.35 = "user42572@sample_user42572.sample"
example_result_0.email.36 = "user28448@sample_user28448.sample"
example_result_0.email.37 = "user26172@sample_user26172.sample"
example_result_0.email.38 = "user26013@sample_user26013.sample"
example_result_0.email.39 = "user42867@sample_user42867.sample"
example_result_0.email.40 = "user4667@sample_user4667.sample"
example_result_0.email.41 = "user23411@sample_user23411.sample"
example_result_0.email.42 = "user11656@sample_user11656.sample"
example_result_0.email.43 = "user25866@sample_user25866.sample"
example_result_0.email.44 = "user49602@sample_user49602.sample"
example_result_0.email.45 = "user19915@sample_user19915.sample"
example_result_0.email.46 = "user42246@sample_user42246.sample"
example_result_0.email.47 = "user592@sample_user592.sample"
example_result_0.email.48 = "user47535@sample_user47535.sample"
example_result_0.email.49 = "user21012@sample_user21012.sample"
example_result_0.total_transaction_value.0 = 855492
example_result_0.total_transaction_value.1 = 852387
example_result_0.total_transaction_value.2 = 843707
example_result_0.total_transaction_value.3 = 821528
example_result_0.total_transaction_value.4 = 732435
example_result_0.total_transaction_value.5 = 726079
example_result_0.total_transaction_value.6 = 703611
example_result_0.total_transaction_value.7 = 695777
example_result_0.total_transaction_value.8 = 636451
example_result_0.total_transaction_value.9 = 628616
example_result_0.total_transaction_value.10 = 628538
example_result_0.total_transaction_value.11 = 627163
example_result_0.total_transaction_value.12 = 598239
example_result_0.total_transaction_value.13 = 588209
example_result_0.total_transaction_value.14 = 580621
example_result_0.total_transaction_value.15 = 550972
example_result_0.total_transaction_value.16 = 540952
example_result_0.total_transaction_value.17 = 533339
example_result_0.total_transaction_value.18 = 505052
example_result_0.total_transaction_value.19 = 498978
example_result_0.total_transaction_value.20 = 492421
example_result_0.total_transaction_value.21 = 487951
example_result_0.total_transaction_value.22 = 485941
example_result_0.total_transaction_value.23 = 472743
example_result_0.total_transaction_value.24 = 464157
example_result_0.total_transaction_value.25 = 446107
example_result_0.total_transaction_value.26 = 443166
example_result_0.total_transaction_value.27 = 432757
example_result_0.total_transaction_value.28 = 415912
example_result_0.total_transaction_value.29 = 401274
example_result_0.total_transaction_value.30 = 398301
example_result_0.total_transaction_value.31 = 375952
example_result_0.total_transaction_value.32 = 370532
example_result_0.total_transaction_value.33 = 363755
example_result_0.total_transaction_value.34 = 356996
example_result_0.total_transaction_value.35 = 350192
example_result_0.total_transaction_value.36 = 349640
example_result_0.total_transaction_value.37 = 330854
example_result_0.total_transaction_value.38 = 321455
example_result_0.total_transaction_value.39 = 319205
example_result_0.total_transaction_value.40 = 315922
example_result_0.total_transaction_value.41 = 305209
example_result_0.total_transaction_value.42 = 304387
example_result_0.total_transaction_value.43 = 300598
example_result_0.total_transaction_value.44 = 298813
example_result_0.total_transaction_value.45 = 296925
example_result_0.total_transaction_value.46 = 296791
example_result_0.total_transaction_value.47 = 280331
example_result_0.total_transaction_value.48 = 270050
example_result_0.total_transaction_value.49 = 268125

prompt_example_1 = "What is the city and state with the most quantity of customers transactions?"
audience_query_1 = """SELECT c.city, c.state, SUM(t.transaction_qnt) as total_transactions
FROM `{}.cdp_dataset.customers` as c
JOIN `{}.cdp_dataset.transactions` as t
ON c.customer_id = t.customer_id
GROUP BY c.city, c.state
ORDER BY total_transactions DESC
LIMIT 1"""
example_result_1.city.0 = "Atlanta"
example_result_1.state.0 = "Georgia"
example_result_1.total_transactions.0 = 252986

prompt_example_2 = "What are the top 50 customer emails ordered by loyalty score?"
audience_query_2 = """SELECT c.email
FROM `{}.cdp_dataset.customers` as c
ORDER BY c.loyalty_score DESC
LIMIT 50"""
example_result_2.email.0 = "user36410@sample_user36410.sample"
example_result_2.email.1 = "user39537@sample_user39537.sample"
example_result_2.email.2 = "user42905@sample_user42905.sample"
example_result_2.email.3 = "user16185@sample_user16185.sample"
example_result_2.email.4 = "user27153@sample_user27153.sample"
example_result_2.email.5 = "user38115@sample_user38115.sample"
example_result_2.email.6 = "user10294@sample_user10294.sample"
example_result_2.email.7 = "user14325@sample_user14325.sample"
example_result_2.email.8 = "user11798@sample_user11798.sample"
example_result_2.email.9 = "user3917@sample_user3917.sample"
example_result_2.email.10 = "user7486@sample_user7486.sample"
example_result_2.email.11 = "user654@sample_user654.sample"
example_result_2.email.12 = "user8239@sample_user8239.sample"
example_result_2.email.13 = "user27383@sample_user27383.sample"
example_result_2.email.14 = "user16127@sample_user16127.sample"
example_result_2.email.15 = "user6385@sample_user6385.sample"
example_result_2.email.16 = "user14330@sample_user14330.sample"
example_result_2.email.17 = "user17562@sample_user17562.sample"
example_result_2.email.18 = "user40714@sample_user40714.sample"
example_result_2.email.19 = "user25908@sample_user25908.sample"
example_result_2.email.20 = "user22574@sample_user22574.sample"
example_result_2.email.21 = "user44252@sample_user44252.sample"
example_result_2.email.22 = "user34710@sample_user34710.sample"
example_result_2.email.23 = "user40677@sample_user40677.sample"
example_result_2.email.24 = "user4400@sample_user4400.sample"
example_result_2.email.25 = "user17852@sample_user17852.sample"
example_result_2.email.26 = "user40544@sample_user40544.sample"
example_result_2.email.27 = "user48183@sample_user48183.sample"
example_result_2.email.28 = "user6405@sample_user6405.sample"
example_result_2.email.29 = "user17702@sample_user17702.sample"
example_result_2.email.30 = "user9840@sample_user9840.sample"
example_result_2.email.31 = "user31034@sample_user31034.sample"
example_result_2.email.32 = "user19437@sample_user19437.sample"
example_result_2.email.33 = "user21268@sample_user21268.sample"
example_result_2.email.34 = "user27294@sample_user27294.sample"
example_result_2.email.35 = "user42572@sample_user42572.sample"
example_result_2.email.36 = "user28448@sample_user28448.sample"
example_result_2.email.37 = "user26172@sample_user26172.sample"
example_result_2.email.38 = "user26013@sample_user26013.sample"
example_result_2.email.39 = "user42867@sample_user42867.sample"
example_result_2.email.40 = "user4667@sample_user4667.sample"
example_result_2.email.41 = "user23411@sample_user23411.sample"
example_result_2.email.42 = "user11656@sample_user11656.sample"
example_result_2.email.43 = "user25866@sample_user25866.sample"
example_result_2.email.44 = "user49602@sample_user49602.sample"
example_result_2.email.45 = "user19915@sample_user19915.sample"
example_result_2.email.46 = "user42246@sample_user42246.sample"
example_result_2.email.47 = "user592@sample_user592.sample"
example_result_2.email.48 = "user47535@sample_user47535.sample"
example_result_2.email.49 = "user21012@sample_user21012.sample"


# -----------------------------------------------------------------------------
# Configurations for 4_Trendspotting.py
# -----------------------------------------------------------------------------
[pages.4_trendspotting]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Trendspotting"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/trend_icon.png"


# -----------------------------------------------------------------------------
# Configurations for 5_Consumer_Insights.py
# -----------------------------------------------------------------------------
[pages.5_consumer_insights]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Consumer Insights"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/consumer_icon.png"

# Enterprise Search datastores and location. 
# Change the dataset variable to reflect your configuration.
# Sample datastore ID
# datastores.<datastore ID> = 'default_config'
datastores.google-ads-support_1686058481432 = "default_config"
search_location = "global"


# -----------------------------------------------------------------------------
# Configurations for 6_Content_Generation.py
# -----------------------------------------------------------------------------
[pages.6_content_generation] 

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - file_name_*: Images for this page.
page_title = "Content Generation"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
file_name = "/app/images/page_2.png"


# -----------------------------------------------------------------------------
# Configurations for 7_Email_Copy.py 
# -----------------------------------------------------------------------------
[pages.7_email_copy] 

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Email Copy"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/email_icon.png"

# Default prompt for email copy generation
# You can change this prompt to generate different email copies.
prompt_email_text = """User information: {}
Theme: {}
Using the user information, generate a personalized email with the theme mentioned above for the user"""

# Default prompt for image generation
# This image will be included with the generated email copy.
prompt_image_generation = "Generate an image for an email copy for {}"

# Default themes for email copy generation
# (optional) Include or remove themes as needed
prompt_themes = [
    "sales of new women's handbags at Cymbal",
    "introducing a new line of men's leather shoes",
    "new opening of Cymbal concept shoe store in NYC",
    "Cymbal shoes retail brand in NYC"]

# If the user didn't run the Audienced.py script, it will use this default list.
sample_emails = [
"user36410@sample_user36410.sample",
"user39537@sample_user39537.sample",
"user42905@sample_user42905.sample",
"user16185@sample_user16185.sample",
"user27153@sample_user27153.sample",
"user38115@sample_user38115.sample",
"user10294@sample_user10294.sample",
"user14325@sample_user14325.sample",
"user11798@sample_user11798.sample",
"user3917@sample_user3917.sample",
"user7486@sample_user7486.sample",	
"user654@sample_user654.sample",	
"user8239@sample_user8239.sample",	
"user27383@sample_user27383.sample",	
"user16127@sample_user16127.sample",	
"user6385@sample_user6385.sample",	
"user14330@sample_user14330.sample",	
"user17562@sample_user17562.sample",	
"user40714@sample_user40714.sample",	
"user25908@sample_user25908.sample",	
"user22574@sample_user22574.sample"]

# Age buckets that describe your audience
# You can include or remove these options as needed.
age_bucket = ['young adult', 'middle-aged', 'senior']

# Default male names to be included in the email copy.
# We didn't included this in the BigQuery table to not expose any PII.
# You can change this names if you want.
male_names = [
"James",
"Robert",
"John",
"Michael",
"David",
"William",
"Richard",
"Joseph",
"Thomas",
"Christopher",
"Charles",
"Daniel",
"Matthew",
"Anthony",
"Mark",
"Donald",
"Steven",
"Andrew",
"Paul",
"Joshua"]

# Default female names to be included in the email copy.
# We didn't included this in the BigQuery table to not expose any PII.
# You can change this names if you want.
female_names = [
"Mary",
"Patricia",
"Jennifer",
"Linda",
"Elizabeth",
"Barbara",
"Susan",
"Jessica",
"Sarah",
"Karen",
"Lisa",
"Nancy",
"Betty",
"Sandra",
"Margaret",
"Ashley",
"Kimberly",
"Emily",
"Carol",
"Michelle"]

# Default languages that will be used to translate the generated email copy.
# These languages will be chosen randomly.
# You can include or remove languages as needed.
# reference: https://cloud.google.com/translate/docs/languages
languages =  ["es","zh","cs","da","fr","el","it","ja","pt"]

# The following variables are default texts and images in case the model fails to respond.
# You can change the defaults if needed.
default_email_copy_0 = """Dear customer,\n
We hope this email finds you well.\n
We're writing to let you know about our upcoming sale on new women's handbags at Cymbal. We're offering discounts of up to 50% on all items, so this is a great opportunity to stock up on some new handbags for yourself or for someone special.\n
We have a wide variety of handbags to choose from, including totes, satchels, crossbody bags, and more. We also have a variety of colors and styles to choose from, so you're sure to find something that you love.\n
Our sale starts on Friday, March 11th and ends on Sunday, March 13th. So be sure to shop early to get the best selection.\n
To take advantage of our sale, simply visit our website at www.cymbal.com and enter the code "SALE50" at checkout.\n
We hope to see you soon!\n
Sincerely,\n
The Cymbal Team"""

default_email_copy_1 = """Dear customer,\n
We're excited to introduce our new line of men's shoes at Cymbal. We know you'll love the stylish designs and comfortable construction.\n
Our new shoes are perfect for men of all ages, including middle-aged men like you. They're made with high-quality materials and construction, so you can be sure they'll last.\n
We also have a variety of styles to choose from, so you're sure to find the perfect pair of shoes for your needs. Whether you're looking for a pair of dress shoes for work or a pair of casual shoes for weekend wear, we have something for you.\n
To celebrate the launch of our new line of men's shoes, we're offering a special discount of 20% off your first purchase. Just use the code NEWLINE at checkout.\n
So what are you waiting for? Shop our new line of men's shoes today.\n
Sincerely,\n
The Cymbal Team"""

default_email_copy_2 = """Dear customer,\n
We're excited to announce the new opening of Cymbal concept shoe store in New York City! We know you're a middle-aged man, so we think you'd really appreciate our unique selection of shoes.\n
Cymbal is a new concept store that offers a curated selection of shoes from around the world. We have something for everyone, whether you're looking for a new pair of sneakers, sandals, or boots.\n
We're also offering a special discount to our first 100 customers. Use the code "NEWCYMBAL" at checkout to save 20% on your purchase.\n
We hope to see you soon at Cymbal!\n
Sincerely,\n
The Cymbal Team"""

default_email_copy_3 = """Dear customer,\n
We hope this email finds you well.\n
We're reaching out to you today because we know you're a fan of Cymbal shoes, and we wanted to let you know that we're now open in New York City!\n
We're located at 123 Main Street, and we're open from 10am to 6pm, seven days a week.\n
We have a wide selection of Cymbal shoes to choose from, including our latest styles and designs. We also have a variety of sizes and widths to choose from, so you're sure to find the perfect pair of shoes for you.\n
In addition to our shoes, we also have a variety of other Cymbal merchandise, including t-shirts, hats, and bags.\n
We hope you'll stop by and visit us soon!\n
Sincerely,\n
The Cymbal Team"""

default_email_image_0 = "/app/images/email_image_0.png"
default_email_image_1 = "/app/images/email_image_1.png"
default_email_image_2 = "/app/images/email_image_2.png"
default_email_image_3 = "/app/images/email_image_3.png"


# -----------------------------------------------------------------------------
# Configurations for 8_Website_Post.py page
# -----------------------------------------------------------------------------
[pages.8_website_post]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Website Post"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/website_icon.png"

# Default themes for website post generation
# You can change them if needed.
prompt_themes = [
    "sales of new women's handbags at Cymbal",
    "introducing a new line of men's leather shoes",
    "new opening of Cymbal concept shoe store in NYC",
    "Cymbal shoes retail brand in NYC"
]

# Default prompt for website post generation
# Change this prompt if needed.
prompt_website_template = """I want you to act as a senior content creator who knows how to create awesome website content. 
You are working to create a blog post for an informational website. 
It presents information in reverse chronological order and it's written in an informal or conversational style.
Generate a blog post for {}.
"""

# Default prompt for image generation.
# Change this prompt if needed.
prompt_image_template = """Generate an image for {}"""

# The following variables are default / fallback website posts and images.
# They are used in case the model doesn't return anything.
# Change this defaults if needed.
prompt_website_text_women_handbag = """New Women's Handbags on Sale at Cymbal\n
Cymbal is excited to announce the arrival of our new collection of women's handbags. These stylish and functional bags are perfect for any occasion, from a night out on the town to a day at the office.\n
Our new handbags come in a variety of styles, colors, and sizes to suit your individual needs. Whether you're looking for a small crossbody bag to carry your essentials or a large tote bag for work, we have something for you.\n
In addition to our wide selection of styles, our new handbags are also made from high-quality materials that will last for years to come. We use only the finest leathers and fabrics, so you can be sure that your new bag will look and feel great for years to come.\n
We're also offering a special sale on our new handbags. You can save on select styles, so don't miss out on this opportunity to stock up on your new favorite bag.\n
Shop our new collection of women's handbags today and find the perfect bag to complete your look.\n
Here are some of our top picks from the new collection:\n
The Cymbal Tote Bag is a stylish and spacious bag that's perfect for everyday use. It features a roomy interior with multiple compartments, so you can keep your belongings organized. The Cymbal Tote Bag is also made from durable leather that will last for years to come.\n
The Cymbal Crossbody Bag is a chic and compact bag that's perfect for a night out on the town. It features a stylish design and a comfortable crossbody strap, so you can wear it all day long. The Cymbal Crossbody Bag is also made from lightweight leather that won't weigh you down.\n
The Cymbal Satchel Bag is a versatile and stylish bag that can be dressed up or down. It features a sleek design and a spacious interior, so you can carry everything you need. The Cymbal Satchel Bag is also made from durable leather that will last for years to come.\n
These are just a few of our top picks from the new collection of women's handbags at Cymbal. Shop our entire collection today and find the perfect bag to complete your look."""

prompt_website_text_man_shoes = """Introducing the New Line of Men's Shoes at Cymbal\n
We're excited to announce the launch of our new line of men's shoes! We've been working hard to create a collection that is stylish, comfortable, and durable, and we think you're going to love it.\n
Our new line features a variety of styles to suit every man's needs. Whether you're looking for a pair of dress shoes for work, casual shoes for everyday wear, or athletic shoes for your next workout, we have something for you.\n
We've also used only the finest materials in our construction, so you can be sure that our shoes will last. And because we know that life happens, all of our shoes come with a 90-day warranty.\n
So what are you waiting for? Check out our new line of men's shoes today!\n
Here are just a few of the features of our new line of men's shoes:\n
 - Stylish designs that will turn heads\n
 - Comfortable construction that will keep you feeling your best all day long\n
 - Durable materials that will last for years to come\n
 - A 90-day warranty that gives you peace of mind\n
We're confident that you'll love our new line of men's shoes. So what are you waiting for? Shop now!\n
Here are some of the styles that are available in our new line of men's shoes:\n
 - Dress shoes\n
 - Casual shoes\n
 - Athletic shoes\n
 - Boots\n
 - Sandals\n
We have something for every man, so be sure to check out our entire collection today!\n
We're also offering a special discount of 20% off your first purchase. Just use the code NEWLINE at checkout.\n
So what are you waiting for? Shop now and start looking your best!"""

prompt_website_text_concept_store = """Cymbal Concept Shoe Store Opens in NYC\n
New York City, NY – March 8, 2023 – Cymbal, a new concept shoe store, opened its doors in New York City today. The store, located at 100 Fifth Avenue, offers a unique shopping experience that combines the latest in fashion with cutting-edge technology.\n
Cymbal is the brainchild of two friends, Ben and Jerry. Ben is a former footwear designer who worked for some of the biggest brands in the industry. Jerry is a tech entrepreneur who has developed a new platform that allows shoppers to interact with products in a whole new way.\n
The store is divided into two sections. The first section is dedicated to the latest in fashion. Cymbal carries a wide variety of shoes from both established brands and up-and-coming designers. The second section is where the technology comes in.\n
Cymbal has developed a platform that allows shoppers to interact with products in a virtual environment. Using the platform, shoppers can try on shoes, change colors, and even see how they would look on different body types.\n
The platform is also integrated with social media, allowing shoppers to share their experiences with friends and family.\n
Cymbal is the first store of its kind in the world. It offers a unique shopping experience that is sure to appeal to both fashion-forward shoppers and tech-savvy consumers.\n
About Cymbal\n
Cymbal is a new concept shoe store that combines the latest in fashion with cutting-edge technology. The store, located at 100 Fifth Avenue in New York City, offers a unique shopping experience that allows shoppers to interact with products in a virtual environment.\n
Cymbal was founded by two friends, Ben and Jerry. Ben is a former footwear designer who worked for some of the biggest brands in the industry. Jerry is a tech entrepreneur who has developed a new platform that allows shoppers to interact with products in a whole new way.\n
Cymbal carries a wide variety of shoes from both established brands and up-and-coming designers. The store also offers a variety of services, including shoe repair and customization.\n
Cymbal is the future of shoe shopping. It is a place where fashion and technology meet to create an unforgettable shopping experience.\n
To learn more about Cymbal, visit their website at www.cymbal.com."""

prompt_website_text_brand = """Cymbal Shoes: A New Retail Brand in NYC\n
Cymbal Shoes is a new retail brand that is taking the city by storm. With its unique selection of shoes, stylish designs, and affordable prices, Cymbal Shoes is quickly becoming a go-to destination for shoe lovers of all ages.\n
Cymbal Shoes was founded by two friends who had a passion for shoes and a desire to create a brand that was different from anything else on the market. They wanted to create a brand that was stylish, affordable, and accessible to everyone.\n
Cymbal Shoes offers a wide variety of shoes, including sneakers, boots, sandals, and heels. They also have a variety of styles to choose from, including casual, dressy, and athletic. And with prices starting at just $20, Cymbal Shoes is sure to have something for everyone.\n
In addition to their wide selection of shoes, Cymbal Shoes also offers a variety of other services, such as free shipping and returns, and a 30-day satisfaction guarantee.\n
Cymbal Shoes is located in the heart of New York City, at 123 Main Street. They are open seven days a week, from 10am to 8pm.\n
If you're looking for a new pair of shoes, be sure to check out Cymbal Shoes. You won't be disappointed!\n
Here are some of the reasons why Cymbal Shoes is a great choice:\n
 - Unique selection of shoes\n
 - Stylish designs\n
 - Affordable prices\n
 - Free shipping and returns\n
 - 30-day satisfaction guarantee\n
 - Convenient location\n
If you're looking for a new pair of shoes, be sure to check out Cymbal Shoes. You won't be disappointed!"""

default_image_0 = "/app/images/website_1.png"
default_image_1 = "/app/images/website_2.png"
default_image_2 = "/app/images/website_3.png"
default_image_3 = "/app/images/website_4.png"


# -----------------------------------------------------------------------------
# Configurations for 9_Social_Media.py
# -----------------------------------------------------------------------------
[pages.9_social_media]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Social Media"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/social_icon.png"

# Dafault instagram gender
instagram_gender_options = ["All", "Men", "Women"]
# Maximum number of characters in the post
instagram_char_limit = 2200
# Maximum number of characters in the post
threads_char_limit = 500

# Default prompt template to generate a post for social media platforms.
# You can change this prompt if needed.
ad_prompt_template = """I want you to act as a senior social media ads content creator who knows how to create awesome social media content. 
You are working to create an ad for {}. Use {} characters to write this ad.
The ad is for people in age range of {} and of the gender {}.
Generate a social media ad for {}: """

# Default prompt template to generate an image for the post.
# You can change this prompt if needed.
image_prompt_template = """Generate an image for {}"""

# Default themes for the prompts. This will be displayed as options for the user.
# You can change this list if needed.
themes_for_prompts = [
    "sales of new handbags at Cymbal",
    "introducing a new line of men's leather shoes",
    "new opening of Cymbal concept shoe store in NYC",
    "Cymbal shoes retail brand in NYC"
]

# The following variables are default / fallback social media posts and images.
# They are used in case the model doesn't return anything.
# Change this defaults if needed.
social_threads_0 = """New handbags at Cymbal!\n
Looking for a new handbag to add to your collection? Look no further than Cymbal! We have a wide variety of handbags to choose from, all at great prices. Whether you're looking for a stylish crossbody bag, a roomy tote bag, or a chic clutch, we have something for everyone.\n
And now, for a limited time, take an extra 20% off all handbags! This is the perfect opportunity to stock up on your favorite styles or treat yourself to a new bag."""

social_threads_1 = """Introducing the new line of shoes from Cymbal!\n
Our new line of shoes is perfect for the modern woman on the go. With a variety of styles to choose from, you're sure to find the perfect pair of shoes to match your personality and lifestyle.\n
Our shoes are made with high-quality materials and construction, so you can be sure they'll last. Plus, they're incredibly comfortable, so you can wear them all day long.\n
So what are you waiting for? Shop our new line of shoes today!"""

social_threads_2 = """Introducing Cymbal, a new concept shoe store in NYC.\n
Cymbal is a one-of-a-kind shoe store that offers a unique shopping experience. We have a wide selection of shoes from all the top brands, but what really sets us apart is our personal touch.\n
Our team of experts is here to help you find the perfect pair of shoes for your needs. We'll take the time to learn about your style and your lifestyle, and then we'll make recommendations that are perfect for you."""

social_threads_3 = """Cymbal Shoes: The Perfect Shoes for Your Next Adventure\n
Looking for a pair of shoes that can keep up with your active lifestyle? Look no further than Cymbal Shoes! Our shoes are made with high-quality materials and construction, so you can be sure they'll last. Plus, our shoes are designed with comfort in mind, so you can wear them all day long.\n
Whether you're running errands, going to the gym, or just taking a walk around the city, Cymbal Shoes are the perfect choice for you. """

social_instagram_0 = """Cymbal is excited to announce the launch of our new line of handbags. These stylish and functional bags are perfect for any occasion, from a night out on the town to a day at the office.\n
Our handbags are made with high-quality materials and construction, so you can be sure they'll last. They're also available in a variety of colors and styles, so you're sure to find the perfect one for you.\n
To celebrate the launch of our new handbags, we're offering 20 percent off all purchases. So what are you waiting for? Shop now and get your new Cymbal handbag!\n
Shop now at cymbal.com."""

social_instagram_1 = """Introducing the new line of shoes from Cymbal!\n
Our new line of shoes is designed to take you from day to night, with styles that are both stylish and comfortable. Whether you're running errands, going to work, or out on the town, our shoes will have you looking and feeling your best.\n
Our new line of shoes features:\n
 - A variety of styles to choose from, including flats, heels, boots, and sandals\n
 - Comfortable, supportive soles that will keep you feeling your best all day long\n
 - Durable materials that will last season after season\n
 - Fashion-forward designs that will turn heads wherever you go\n
Shop our new line of shoes today and experience the difference!\n
Visit our website or find a store near you to see our full selection.\n
Cymbal: Shoes that make you feel good."""

social_instagram_2 = """Cymbal: The New Concept Shoe Store in NYC\n
Cymbal is a new concept shoe store that's unlike anything you've seen before. We offer a curated selection of the latest and greatest shoes from around the world, all at an affordable price.\n
We believe that shoes should be more than just a way to get from point A to point B. They should be an expression of your personality and style. That's why we offer a wide variety of styles to choose from, so you can find the perfect pair of shoes to match your look.\n
In addition to our amazing selection of shoes, we also offer a unique shopping experience. Our stores are designed to be inviting and inspiring, and our staff is always happy to help you find the perfect pair of shoes.\n
So if you're looking for a new pair of shoes that will make you stand out from the crowd, come check out Cymbal today!\n
Visit our website or stop by one of our stores today to find the perfect pair of shoes!"""

social_instagram_3 = """Cymbal Shoes: The Perfect Shoes for Your Next Adventure\n
Are you looking for the perfect shoes for your next adventure? Look no further than Cymbal Shoes! Our shoes are made with high-quality materials and construction, so you can be sure they'll last. Plus, our shoes are stylish and comfortable, so you can look and feel your best on your next big trip.\n
Whether you're hiking in the mountains, exploring a new city, or just running errands, Cymbal Shoes have you covered. Check out our wide selection of styles and colors today!\n
Shop now at cymbalshoes.com.\n
Cymbal Shoes: The perfect shoes for your next adventure."""

default_image_instagram_0 = "/app/images/social_instagram_0.png"
default_image_instagram_1 = "/app/images/social_instagram_1.png"
default_image_instagram_2 = "/app/images/social_instagram_2.png"
default_image_instagram_3 = "/app/images/social_instagram_3.png"

default_image_threads_0 = "/app/images/social_threads_0.png"
default_image_threads_1 = "/app/images/social_threads_1.png"
default_image_threads_2 = "/app/images/social_threads_2.png"
default_image_threads_3 = "/app/images/social_threads_3.png"

# -----------------------------------------------------------------------------
# Configurations for 10_Asset_Group_Pmax.py page
# -----------------------------------------------------------------------------
[pages.10_asset_group] 

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Asset Group for PMax"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_image = "/app/images/asset_icon.png"

# Default prompt template for image generation
# You can change this prompt if needed.
# Make sure you include the {theme} as part of the prompt
image_generation_prompt = "Generate an image for {}"

# Default prompt template for headline
# You can change this prompt if needed.
headline_prompt_template = """Using the Cymbal brand information below as your context, create 5 headlines for a campaign with {} as objective, under 30 characters each headline.
{}

Headlines: """

# Default prompt template for long headline
# You can change this prompt if needed.
load_headline_prompt_template = """Using the Cymbal brand information below as your context, create 5 long headlines (90 characters each) for a campaign with {} as objective. Be creative and use all the 90 characters for the long headline.
{}
Long headlines: """

# Default prompt template for product description.
# You can change this prompt if needed.
description_prompt_template = """Using the Cymbal brand information below as your context, create a product description (90 characters) for {}. Be creative and use all the 90 characters for the long headline.
{}
Product description: """

# Default business name
# Change this variable if needed.
business_name = "Cymbal"

# Default list of call to action.
# Change this list if needed.
call_to_action = [
"Book Now",
"Contact Us",
"Download",
"Learn More",
"Visit Site",
"Shop Now",
"Sign Up",
"Subscribe",
"See More"]

# Default themes for PMax assets generation
# You can change this list if needed.
themes_for_prompts = [
    "sales of new women's handbags at Cymbal",
    "introducing a new line of men's leather shoes",
    "new opening of Cymbal concept shoe store in NYC",
    "Cymbal shoes retail brand in NYC"
]

# The following variables are default / fallback PMax assets and images.
# They are used in case the model doesn't return anything.
# Change this defaults if needed.
asset_group_headlines = """Cymbal: New Women's Handbags.\n
Shop the Latest Handbag Collection at Cymbal.\n
Cymbal: Chic Handbags for Every Occasion.\n
Cymbal: Elevate Your Style with a New Handbag.\n
Cymbal: A New Handbag for Every Woman."""

asset_group_long_headlines = """Cymbal: A symphony of style. Elevate your look with our new collection of women's handbags.\n
Cymbal: Timeless elegance and modern style. Discover our new collection of women's handbags.\n
Cymbal: The perfect handbag for every occasion. Shop our latest collection now.\n
Cymbal: Chic, stylish, and sophisticated. Our new collection of women's handbags is sure to turn heads.\n
Cymbal: A new season, a new you. Shop our latest collection of women's handbags and start your new year off in style."""

asset_group_description = "Cymbal's new collection of women's handbags is a symphony of style, featuring a harmonious blend of trendsetting designs and unparalleled quality."

default_image_asset_0_0 = "/app/images/asset_group_0_0.png"
default_image_asset_0_1 = "/app/images/asset_group_0_1.png"

default_image_asset_1_0 = "/app/images/asset_group_1_0.png"
default_image_asset_1_1 = "/app/images/asset_group_1_1.png"

default_image_asset_2_0 = "/app/images/asset_group_2_0.png"
default_image_asset_2_1 = "/app/images/asset_group_2_1.png"

default_image_asset_3_0 = "/app/images/asset_group_3_0.png"
default_image_asset_3_1 = "/app/images/asset_group_3_1.png"


# -----------------------------------------------------------------------------
# Configurations for 11_Activation_Optimization.py
# -----------------------------------------------------------------------------
[pages.11_activation_optimization] 

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - file_name_*: Images for this page.
page_title = "Activation & Optimization"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
file_name = "/app/images/page_3.png"

# -----------------------------------------------------------------------------
# Configurations for 12_Review_Activate.py =========
# -----------------------------------------------------------------------------
[pages.12_review_activate]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Review and Activate"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_icon = "/app/images/activate_icon.png"

# ID of the templates
# Change this variables according to your Google Workspace settings
drive_folder_id = '<DRIVE FOLDER ID>' # example: "1MYB0Ybyo9XZERgIcjsdfeqO0SKqhrkvqMx"
slides_template_id = '<SLIDES TEMPLATE ID>' # example: '16uQlLkCJ9YRiMU_IoONHsl-vY-uKeoasnWTPlbZZ1D4'
doc_template_id = '<DOCS TEMPLATE ID>' # example: '1kqvxZLRXIdfM8MVS7css4UoiJ8f0I4dKFj9cP986K4pM'
sheet_template_id = '<SHEETS TEMPLATE ID>' # example: '1gIaIWLOeKmnjso7-CAAAcqMlPznpoEXDdEue3DNWr7bw'
slide_page_id_list = ["p3","p4","p5","p6","p7","p8"] # LIST OF PAGES WHERE YOU WANT TO INSERT CHARTS FROM THE SHEETS

# Scope for the Workspace API - don't change
workspace_scopes = [
    'https://www.googleapis.com/auth/presentations',
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/drive.file',
    'https://www.googleapis.com/auth/drive',
    'https://www.googleapis.com/auth/drive.resource',
    'https://www.googleapis.com/auth/documents']


# -----------------------------------------------------------------------------
# Configurations for 13_Campaign_Performance.py
# -----------------------------------------------------------------------------
[pages.13_campaign_performance]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Campaign Performance"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_icon = "/app/images/opt_icon.png"

# Infobot version
# Change with the code snippet provided by your Infobot deployment
# The code is similar to the one commented below
infobot = """<script src="https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js"></script>
<df-messenger
  project-id="gen-app-builder-infobot-demo"
  agent-id="ba8721e5-2aba-487e-b766-efc1fdf70e21"
  language-code="en">
  <df-messenger-chat-bubble
   chat-title="infobot-ads-help">
  </df-messenger-chat-bubble>
</df-messenger>
<style>
  df-messenger {
    z-index: 999;
    position: fixed;
    bottom: 16px;
    right: 16px;
  }
</style>"""

# Looker Dashboards
# The link of the looker Dashboard must follow this format:
# https://<LOOKER INSTANCE URL>/embed/dashboards/<DASHBOARD NUMBER>?allow_login_screen=true
# Include your Dashboards following this patter:
# dashboards.<Name of your dashboard, no spaces> = '<link to your dashboard>'
dashboards.Overview = 'https://googledemo.looker.com/embed/dashboards/2131?allow_login_screen=true'

# -----------------------------------------------------------------------------
# Configurations for 14_Vertex_AI_APIs.py
# -----------------------------------------------------------------------------
[pages.14_vertex_ai]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - file_name_*: Images for this page.
page_title = "Vertex AI APIs"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
file_name = "/app/images/favicon.png"


# -----------------------------------------------------------------------------
# Configurations for 15_Text_Generation.py
# -----------------------------------------------------------------------------
[pages.15_text_generation]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Text Generation with PaLM"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_icon = "/app/images/favicon.png"


# -----------------------------------------------------------------------------
# Configurations for 16_Image_Generation.py
# -----------------------------------------------------------------------------
[pages.16_image_generation]

# Change the following parameters as needed:
# - page_title: Text that goes in the browser tab and on the top of this page.
# - page_icon: Image that goes in the browser tab.
# - sidebar_image_path: Image that goes in the left-side menu.
# - page_title_icon: Image that goes on the left side of the main title of this page.
page_title = "Image Generation"
page_icon = "/app/images/favicon.png"
sidebar_image_path = "/app/images/menu_icon_2.png"
page_title_icon = "/app/images/favicon.png"

# Pre populated prompts for image generation.
# You can change this defaults as needed.
pre_populated_prompts = [
    'A photo of a handbag on a kitchen counter, natural lighting, 4k',
    'A photo of a handbag on the beach, natural lighting, 4k',
    'Studio photo of a purple handbag, natural lighting, 4k'
]

# Maximum size allowed to upload an image
image_upload_bytes_limit = 1e7
